maya_shelves:
  model:
    order: 1
    active: 1
    open:
      command: "import tools.maya.shelves.open as open; open.run()"
      order: 1
      icon: import_36px.png
      label: ''
      annotation: 'Open a mdl file'
    version_up:
      command: "import tools.maya.base as base; base.MayaScene().version_up()"
      order: 2
      icon: version_up_36px.png
      label: ''
      annotation: 'Version Up'
    create_turntable:
      command: "import tools.maya.turntable as turn; turn.run(task='mdl')"
      order: 3
      icon: TT_36px.png
      label: ''
      annotation: 'Create Turntable'
    clean_turntable:
      command: "import tools.maya.turntable as turn; turn.clean(task='mdl')"
      order: 4
      icon: TT_clean_36px.png
      label: ''
      annotation: 'Clean Turntable'
    playblast:
      command: "import tools.maya.base as base; base.basic_playblast()"
      order: 5
      label: ''
      annotation: 'Playblast'
      icon: playblast_36px.png
    review:
      command: "print('need a review')"
      order: 6
      label: ''
      annotation: 'Review'
      icon: review_36px.png
    publish:
      command: "from tools.maya.bin import preflight; preflight.launch_('mdl')"
      order: 7
      icon: publish_36px.png
      label: ''
      annotation: 'Publish your Model'
    spacer:
      command: 'print "just a spacer"'
      order: 8
      icon: model_36px.png
      label: ''
      annotation: 'Spacer'
    snap_to_origin:
      command: "import tools.maya.util as util; util.snap_to_origin();"
      order: 9
      icon: snap_to_origin_36px.png
      label: ''
      annotation: 'Snap to Origin'
    geo_counter:
      command: "from tools.maya.shelves.model.poly_reduce import GeoCounter; diag = GeoCounter(); diag.show();"
      order: 8
      icon: snap_to_origin_36px.png
      label: ''
      annotation: 'Geo Counter'
    spacer2:
      command: 'print "just a spacer"'
      order: 9
      icon: model_36px.png
      label: ''
      annotation: 'Spacer'
    report_bug:
      command: "print 'bug command'"
      order: 10
      icon: bug_36px.png
      label: ''
      annotation: 'Report a Bug'
    help:
      command: "print 'help command'"
      order: 11
      icon: help_36px.png
      label: ''
      annotation: 'Go to Lumberjack Help'
  rig:
    order: 2
    active: 1
    open:
      command: "import tools.maya.shelves.open as open; open.run()"
      order: 1
      icon: import_36px.png
      label: ''
      annotation: 'Open a shader file'
    version_up:
      command: "import tools.maya.base as base; base.MayaScene().version_up()"
      order: 2
      icon: version_up_36px.png
      label: ''
      annotation: 'Version Up'
    build:
      command: "import tools.maya.shelves.rig.rig_build_button as rbb; rbb.run()"
      order: 3
      icon: build_36px.png
      label: ''
      annotation: 'Version Up'
    update_references:
      command: "import tools.maya.base as base; base.update_references(shaded_model=True, context='render')"
      order: 4
      icon: update_refs_36px.png
      label: ''
      annotation: 'Update Scene References'
    update_with_shaders:
      command: "import tools.maya.base as base; base.update_references(shaded_model=True, context='render', checks=['mdl'], task='shd')"
      order: 5
      icon: update_shd_36px.png
      label: ''
      annotation: 'Update Models with Shaders'
    create_turntable:
      command: "import tools.maya.turntable as turn; turn.run(task='rig')"
      order: 6
      icon: TT_36px.png
      label: ''
      annotation: 'Create Turntable'
    clean_turntable:
      command: "import tools.maya.turntable as turn; turn.clean(task='rig')"
      order: 7
      icon: TT_clean_36px.png
      label: ''
      annotation: 'Clean Turntable'
    playblast:
      command: "import tools.maya.base as base; base.basic_playblast()"
      order: 8
      label: ''
      annotation: 'Playblast'
      icon: playblast_36px.png
    review:
      command: "print('need a review')"
      order: 9
      label: ''
      annotation: 'Review'
      icon: review_36px.png
    publish:
      command: "from tools.maya.bin import preflight; preflight.launch_('rig')"
      order: 10
      icon: publish_36px.png
      label: ''
      annotation: 'Publish your Rig'
    spacer:
      command: 'print "just a spacer"'
      order: 11
      icon: rigging_36px.png
      label: ''
      annotation: 'Spacer'
  shading:
    order: 2
    active: 1
    open:
      command: "import tools.maya.shelves.open as open; open.run()"
      order: 1
      icon: import_36px.png
      label: ''
      annotation: 'Open a Scene'
    build:
      command: "import tools.maya.shelves.shd.build as build; build.run()"
      order: 2
      icon: build_36px.png
      label: ''
      annotation: 'Build a Shading scene'
    env_light:
      command: "import tools.maya.shelves.shd.make_hdri_light as make_hdri_light; make_hdri_light.run()"
      order: 3
      icon: hdr_lib_36px.png
      label: ''
      annotation: 'Create HDRI lighting Environment (Substance HDRI Library)'
    update_references:
      command: "import tools.maya.base as base; base.update_references(shaded_model=True, context='render')"
      order: 4
      icon: update_refs_36px.png
      label: ''
      annotation: 'Update Scene References'
    publish:
      command: "from tools.maya.bin import preflight; preflight.launch_('shd')"
      order: 5
      icon: publish_36px.png
      label: ''
      annotation: 'Publish your Shaders'
    spacer:
      command: 'print "just a spacer"'
      order: 6
      icon: shading_36px.png
      label: ''
      annotation: 'Spacer'
    update_with_shaders:
      command: "import tools.maya.util as util; util.import_and_attach_shaders_for_references()"
      order: 7
      icon: auto_shade_36px.png
      label: ''
      annotation: 'Auto Attach Shaders'
  previs:
    order: 3
    active: 1
    open:
      command: "import tools.maya.shelves.open as open; open.run()"
      order: 1
      icon: import_36px.png
      label: ''
      annotation: 'Open a lay file'
    version_up:
      command: "import tools.maya.base as base; base.MayaScene().version_up()"
      order: 2
      icon: version_up_36px.png
      label: ''
      annotation: 'Version Up'
    update_references:
      command: "import tools.maya.base as base; base.update_references(shaded_model=True, context='render')"
      order: 3
      icon: update_refs_36px.png
      label: ''
      annotation: 'Update References'
    playblast:
      command: "import tools.maya.base as base; base.basic_playblast()"
      order: 4
      label: ''
      annotation: 'Playblast'
      icon: playblast_36px.png
    review:
      command: "print('need a review')"
      order: 5
      label: ''
      annotation: 'Review'
      icon: review_36px.png
    publish:
      command: "import tools.maya.bin.preflight as preflight; preflight.launch_('previs')"
      order: 6
      icon: publish_36px.png
      label: ''
      annotation: 'Publish your Previs'
    spacer:
      command: 'print "just a spacer"'
      order: 7
      icon: previs_36px.png
      label: ''
      annotation: 'Spacer'
    publish_selected:
      command: "import tools.maya.base as base; base.publish_selected()"
      order: 8
      icon: publish_selected_36px.png
      label: ''
      annotation: 'Publish Selected Model'
    publish_selected_as_bndl:
      command: "import tools.maya.base as base; base.publish_selected_as_bundle()"
      order: 8
      icon: publish_selected_36px.png
      label: 'bndle'
      annotation: 'Publish Selected Bundle'
    update_selected:
      command: "import tools.maya.base as base; base.update_selected()"
      order: 9
      icon: updated_selected_36px.png
      label: ''
      annotation: 'Publish/Update Selected'
    publish_camera:
      command: "import tools.maya.preflight.previs.PublishCameras as PC; PC.PublishCameras().run()"
      order: 10
      icon: cam_publish_36px.png
      label: ''
      annotation: 'Publish your Cameras'
    spacer2:
      command: 'print "just a spacer"'
      order: 11
      icon: previs_36px.png
      label: ''
      annotation: 'Spacer'
    assetizer:
      command: "from apps.maya import QuickPublish as qp; reload(qp); publisher = qp.QuickPublish(); publisher.run();"
      order: 12
      icon: assetizer_36px.png
      label: 'PUB'
      annotation: 'asset and layout publish'
    assetizer_lite:
      command: "import pymel.core as pm; from apps.unity import util; util.create_unity_project(pm.sceneName())"
      order: 13
      icon: assetizer_36px.png
      label: 'Unity'
      annotation: 'Create Unity Project'
  bundle:
    order: 4
    active: 1
    open:
      command: "import tools.maya.shelves.open as open; open.run()"
      order: 1
      icon: import_36px.png
      label: ''
      annotation: 'Open a bundle file'
    version_up:
      command: "import tools.maya.base as base; base.MayaScene().version_up()"
      order: 2
      icon: version_up_36px.png
      label: ''
      annotation: 'Version Up'
    update_references:
      command: "import tools.maya.util as util; util.update_all_references()"
      order: 3
      icon: update_refs_36px.png
      label: ''
      annotation: 'Update All References'
    publish:
      command: "import tools.maya.bin.preflight as preflight; preflight.launch_('bndl')"
      order: 4
      icon: publish_36px.png
      label: ''
      annotation: 'Publish your bundle'
    spacer:
      command: 'print "just a spacer"'
      order: 5
      icon: bundl_36px.png
      label: ''
      annotation: 'Spacer'
    publish_selected:
      command: "import tools.maya.base as base; base.publish_selected_as_bundle()"
      order: 6
      icon: create_bundle_36px.png
      label: ''
      annotation: 'Publish Selected Bundle'
    import_bundle:
      command: "import ui.widgets.dialog_maya as dm; dm.BundleImport().exec_()"
      order: 7
      icon: import_bundle_36px.png
      label: ''
      annotation: 'Import Bundle'
    remove_bundle:
      command: "import tools.maya.util as util; util.remove_selected_bundle()"
      order: 8
      icon: delete_bundle_36px.png
      label: ''
      annotation: 'Delete Selected Bundle'
    find_duplicate_geo:
      command: "import tools.maya.shelves.bndl.find_duplicate_geo as fdg; fdg.run()"
      order: 9
      icon: ''
      label: 'fnd dup'
      annotation: 'Find Duplicate Geo'
    spacer2:
      command: 'print "just a spacer"'
      order: 12
      icon: bundl_36px.png
      label: ''
      annotation: 'Spacer'
  layout:
    order: 5
    active: 1
    open:
      command: "import tools.maya.shelves.open as open; open.run()"
      order: 1
      icon: import_36px.png
      label: ''
      annotation: 'Open a lay file'
    version_up:
      command: "import tools.maya.base as base; base.MayaScene().version_up()"
      order: 2
      icon: version_up_36px.png
      label: ''
      annotation: 'Version Up'
    build:
      command: "import tools.maya.shelves.layout.build as build; build.run()"
      order: 3
      icon: build_36px.png
      label: ''
      annotation: 'Build a Layout scene'
    update_references:
      command: "import tools.maya.base as base; base.update_references(shaded_model=True, context='render')"
      order: 4
      icon: update_refs_36px.png
      label: ''
      annotation: 'Update References'
    update_selected:
      command: "import tools.maya.base as base; base.update_selected(task='lay')"
      order: 5
      icon: publish_selected_36px.png
      label: ''
      annotation: 'Publish/Update Selected'
    playblast:
      command: "import tools.maya.base as base; base.basic_playblast()"
      order: 6
      label: ''
      annotation: 'Playblast'
      icon: playblast_36px.png
    review:
      command: "print('need a review')"
      order: 7
      label: ''
      annotation: 'Review'
      icon: review_36px.png
    update_references:
      command: "import tools.maya.util as util; util.update_all_references()"
      order: 8
      icon: publish_selected_36px.png
      label: ''
      annotation: 'Update All References'
    publish:
      command: "import tools.maya.bin.preflight as preflight; preflight.launch_('lay')"
      order: 9
      icon: publish_36px.png
      label: ''
      annotation: 'Spacer'
    mri_stage_spawn:
      command: "import tools.maya.shelves.layout.mri_tools as mritools; mritools.create_mri_virtual_volume()"
      order: 10
      icon: MRI_smart_stage_36px.png
      label: ''
      annotation: 'Add Stage'
    mri_player_spawn:
      command: "import tools.maya.shelves.layout.mri_tools as mritools; mritools.create_mri_spanwning_location()"
      order: 11
      icon: MRI_player_spawn_36px.png
      label: ''
      annotation: 'Add Player Spawn'
    mri_spectator_spawn:
      command: "import tools.maya.shelves.layout.mri_tools as mritools; mritools.create_mri_spectator_location()"
      order: 12
      icon: MRI_spectator_spawn_36px.png
      label: ''
      annotation: 'Add Spectator Spawn'
    spacer:
      command: 'print "just a spacer"'
      order: 13
      icon: lay_36px.png
      label: ''
      annotation: 'Spacer'
    publish:
      command: "import tools.maya.bin.preflight as preflight; preflight.launch_('lay')"
      order: 14
      icon: publish_36px.png
      label: ''
      annotation: 'Publish your layout'
  anim:
    order: 6
    active: 1
    open:
      command: "import tools.maya.shelves.open as open; open.run()"
      order: 1
      icon: import_36px.png
      label: ''
      annotation: 'Open a lay file'
    version_up:
      command: "import tools.maya.base as base; base.MayaScene().version_up()"
      order: 2
      icon: version_up_36px.png
      label: ''
      annotation: 'Version Up'
    build:
      command: "import tools.maya.shelves.anim.build as build; build.run()"
      order: 3
      icon: build_36px.png
      label: ''
      annotation: 'Build an anim scene'
    reference_camera:
      command: "import tools.maya.base as base; base.reference_shot_cam()"
      order: 4
      icon: build_36px.png
      label: 'cam'
      annotation: 'Build a Layout scene'
    update_references:
      command: "import tools.maya.base as base; base.update_references(shaded_model=True, context='render')"
      order: 5
      icon: update_refs_36px.png
      label: ''
      annotation: 'Update References'
    playblast:
      command: "import tools.maya.base as base; base.basic_playblast()"
      order: 6
      label: ''
      annotation: 'Playblast'
      icon: playblast_36px.png
    review:
      command: "print('need a review')"
      order: 7
      label: ''
      annotation: 'Review'
      icon: review_36px.png
    publish:
      command: "import tools.maya.bin.preflight as preflight; preflight.launch_('anim')"
      order: 8
      icon: publish_36px.png
      label: ''
      annotation: 'Publish your Animation'
    spacer:
      command: 'print "just a spacer"'
      order: 9
      icon: anim_36px.png
      label: ''
      annotation: 'Spacer'
  lite:
    order: 7
    active: 1
    open:
      command: "import tools.maya.shelves.open as open; open.run()"
      order: 1
      icon: import_36px.png
      label: ''
      annotation: 'Open a lay file'
    build:
      command: "import tools.maya.shelves.lite.build as build; build.run()"
      order: 2
      icon: build_36px.png
      label: ''
      annotation: 'Build Lighting Scene'
    env_light:
      command: "import tools.maya.shelves.shd.make_hdri_light as make_hdri_light; make_hdri_light.run()"
      order: 3
      icon: hdr_lib_36px.png
      label: ''
      annotation: 'Create HDRI lighting Environment (Substance HDRI Library)'
    version_up:
      command: "import tools.maya.base as base; base.MayaScene().version_up()"
      order: 5
      icon: version_up_36px.png
      label: ''
      annotation: 'Version Up'
    publish:
      command: "import tools.maya.shelves.lite.PublishLightRig as plg; plg.run()"
      order: 6
      icon: publish_36px.png
      label: 'lt rg'
      annotation: 'Publish Light Rig'
    spacer:
      command: 'print "just a spacer"'
      order: 7
      icon: light_36px.png
      label: ''
      annotation: 'Spacer'
    render:
      command: "import tools.maya.bin.preflight as preflight; preflight.launch_('render')"
      order: 11
      icon: render_36px.png
      label: ''
      annotation: 'Render Preflights'
    spacer2:
      command: 'print "just a spacer"'
      order: 12
      icon: light_36px.png
      label: ''
      annotation: 'Spacer'
